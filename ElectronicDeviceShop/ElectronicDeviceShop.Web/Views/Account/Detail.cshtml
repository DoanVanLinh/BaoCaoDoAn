@using ElectronicDeviceShop.ViewModels.Accounts
@model AccountDetailViewModel

@{
    ViewBag.Title = "Detail";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<div class="p-5 p-5" style="background-color:whitesmoke">
    <div class="container rounded bg-white ">
        <div class="row">
            <div class="col-md-3 border-right">
                <div class="d-flex flex-column align-items-center text-center p-3 py-5">
                    <img class="rounded-circle mt-5" width="150px" src="~/wwwroot/ImageProducts/@Model.Avatar">
                    <span class="font-weight-bold" id="UserName">@Model.UserName</span>
                    <span class="text-black-50"></span>
                </div>
            </div>
            <div class="col-md-5 border-right">
                <div class="p-3 py-5">
                    <div class="d-flex justify-content-between align-items-center mb-3">
                        <h4 class="text-right">Hồ sơ</h4>
                    </div>
                    <div class="row mt-3">
                        <div class="col-md-12">
                            <label class="labels">Họ và tên</label>
                            <input type="text" class="form-control" id="fullName" placeholder="" value="@Model.FullName">
                            <div class="valid-feedback" id="error_fullName"></div>
                        </div>
                        <div class="col-md-12">
                            <label class="labels">Số điện thoại</label>
                            <input type="text" class="form-control" id="phone" placeholder="" value="@Model.Phone">
                            <div class="valid-feedback " id="error_phone"></div>
                        </div>
                        <div class="col-md-12">
                            <label class="labels">Địa chỉ</label>
                            <input type="text" class="form-control" id="address" placeholder="" value="@Model.Address">
                            <div class="valid-feedback " id="error_address"></div>
                        </div>
                        <div class="col-md-12">
                            <label class="labels">Email</label>
                            <input type="text" class="form-control" id="email" placeholder="" value="@Model.Email">
                            <div class="valid-feedback " id="error_email"></div>
                        </div>
                    </div>
                    <div class="mt-5 text-center"><button class="btn btn-primary profile-button" type="button">Lưu</button></div>
                </div>
            </div>
            <div class="col-md-4">
                <div class="p-3 py-5">
                    <div class="d-flex justify-content-between align-items-center mb-3">
                        <h4 class="text-right">Đổi mật khẩu</h4>
                    </div>
                    <div class="row mt-3">
                        <div class="col-md-12">
                            <label class="labels">Mật khẩu cũ</label>
                            <input type="text" class="form-control" id="oldPass" placeholder="" value="">
                            <div class="valid-feedback " id="error_oldPass"></div>
                        </div>
                        <div class="col-md-12">
                            <label class="labels">Mật khẩu mới</label>
                            <input type="text" class="form-control" id="newPass" placeholder="" value="">
                            <div class="valid-feedback " id="error_newPass"></div>
                        </div>
                        <div class="col-md-12">
                            <label class="labels">Xác minh mật khẩu</label>
                            <input type="text" class="form-control" id="confirmPass" placeholder="" value="">
                            <div class="valid-feedback " id="error_confirmPass"></div>
                        </div>
                    </div>
                    <div class="mt-5 text-center"><button class="btn btn-primary profile-button" type="button">Đổi mật khẩu</button></div>
                </div>

            </div>
        </div>
    </div>

</div>

@section Script{
    <script>
        $(document).ready(function () {
        });
        function Edit() {
            errorPhone();
            errorEmail();
            if (checkError)
                return;

            var fileData = GetImage();
            let account = {};
            account["ID_Account"] = Session["ID_Account"];
            account["UserName"] = $('#UserName').text();
            account["FullName"] = $('#FullName').val();
            account["Phone"] = $('#Phone').val();
            account["Address"] = $('#Address').val();
            account["Email"] = $('#Email').val();
            if ($("#Avatar").get(0).files.length != 0)
                account["Avatar"] = fileData.get(0);
            else
                account["Avatar"] = $("#imgPreview").attr('src').split('/')[3];

            $.ajax({
                url: "/Account/Edit",
                data: JSON.stringify(account),
                type: "POST",
                contentType: "application/json;charset=utf-8",
                dataType: "json",
                success: function (result) {
                    UploadImage();
                    ClearTextBox();
                    toastr.success('Lưu thành công!');
                },
                error: function (errormessage) {
                    toastr.error('Lưu không thành công!');
                }
            });
        }
        function ClearTextBox() {

            $('#oldPass').val('');
            $('#newPass').val('');
            $('#confirmPass').val('');

            ClearValidation();
        }
        function ClearValidation() {
            $('#UserName').removeClass('is-invalid');
            $('#UserName').removeClass('is-valid');
            $('#oldPass').removeClass('is-invalid');
            $('#oldPass').removeClass('is-valid');
            $('#newPass').removeClass('is-invalid');
            $('#newPass').removeClass('is-valid');
            $('#confirmPass').removeClass('is-invalid');
            $('#confirmPass').removeClass('is-valid');
            $('#Avatar').removeClass('is-invalid');
            $('#Avatar').removeClass('is-valid');
            $("#imgPreview").attr("src", '/wwwroot/ImageProducts/no-image-icon-0.jpg');
            $('#error_userName').hide();
            $('#oldPass').hide();
            $('#newPass').hide();
            $('#confirmPass').hide();
            $('#error_avatar').hide();
        }
        $('#Avatar').change(function () {
            const [file] = $('#Avatar').get(0).files;
            if (file) {
                imgPreview.src = URL.createObjectURL(file);
            } else {
                imgPreview.src = '/wwwroot/ImageProducts/no-image-icon-0.jpg';
            }
            errorAvatar();
        });
        //Validations
        let passwordRegex = /^\w.{8,}$/;
        let phoneRegex = /^[0-9]{10}$/;
        let emailRegex = /^(([^<>()[\]\\.,;:\s@@"]+(\.[^<>()[\]\\.,;:\s@@"]+)*)|(".+"))@@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;

        let checkError = false;
        const errorOldPass = () => {
            if ($('#oldPass').val() == '') {
                $('#error_password').show();
                $('#error_password').addClass('invalid-feedback');
                $('#error_password').removeClass('valid-feedback');
                $('#oldPass').addClass('is-invalid');
                $('#error_password').text("Mật khẩu không được để trống!");
                checkError = true;
            }
            else if ($('#oldPass').val().length < 8) {
                $('#error_password').show();
                $('#error_password').addClass('invalid-feedback');
                $('#error_password').removeClass('valid-feedback');
                $('#oldPass').addClass('is-invalid');
                $('#error_password').text("Mật khẩu dài hơn 8 kí tự!");
                checkError = true;
            }
            else if (!passwordRegex.test($('#oldPass').val())) {
                $('#error_password').show();
                $('#error_password').addClass('invalid-feedback');
                $('#error_password').removeClass('valid-feedback');
                $('#oldPass').addClass('is-invalid');
                $('#error_password').text("Mật khẩu có chữ, số và kí tự!");
                checkError = true;
            }
            else {
                $('#error_password').hide();
                $('#oldPass').addClass('is-valid');
                $('#oldPass').removeClass('is-invalid');
                checkError = false;
            }
        }
        $('#oldPass').keyup(() => {
            errorOldPass();
        });
        $('#oldPass').keydown(() => {
            errorOldPass();
        });

        const errorEmail = () => {
            if ($('#Email').val() != '' && !emailRegex.test($('#Email').val())) {
                $('#error_email').show();
                $('#error_email').addClass('invalid-feedback');
                $('#error_email').removeClass('valid-feedback');
                $('#Email').addClass('is-invalid');
                $('#error_email').text("Email không đúng định dạng!");
                checkError = true;
            } else if ($('#Email').val() != '') {
                $('#error_email').hide();
                $('#Email').addClass('is-valid');
                $('#Email').removeClass('is-invalid');
                checkError = false;
            }
        }
        $('#Email').keyup(() => {
            errorEmail();
        });
        $('#Email').keydown(() => {
            errorEmail();
        });
        const errorPhone = () => {
            if ($('#Phone').val() != '' && $('#Phone').val().length != 10) {
                $('#error_phone').show();
                $('#error_phone').addClass('invalid-feedback');
                $('#error_phone').removeClass('valid-feedback');
                $('#Phone').addClass('is-invalid');
                $('#error_phone').text("SĐT có 10 số!");
                checkError = true;
            }
            else if ($('#Phone').val() != '' && !phoneRegex.test($('#Phone').val())) {
                $('#error_phone').show();
                $('#error_phone').addClass('invalid-feedback');
                $('#error_phone').removeClass('valid-feedback');
                $('#Phone').addClass('is-invalid');
                $('#error_phone').text("SĐT không đúng định dạng!");
                checkError = true;
            } else if ($('#Phone').val() != '') {
                $('#error_phone').hide();
                $('#Phone').addClass('is-valid');
                $('#Phone').removeClass('is-invalid');
                checkError = false;
            }
        }
        $('#Phone').keyup(() => {
            errorPhone();
        });
        $('#Phone').keydown(() => {
            errorPhone();
        });

        const errorAvatar = () => {
            if ($('#Avatar').get(0).files.length == 0) {
                $('#error_avatar').show();
                $('#error_avatar').addClass('invalid-feedback');
                $('#error_avatar').removeClass('valid-feedback');
                $('#Avatar').addClass('is-invalid');
                $('#error_avatar').text("Ảnh dại diện không được để trống");
                checkError = true;
            } else {
                $('#error_avatar').hide();
                $('#Avatar').addClass('is-valid');
                $('#Avatar').removeClass('is-invalid');
                checkError = false;
            }
        }

    </script>

}
